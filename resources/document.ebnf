Document = Ignored* Definition+ Ignored*
Definition = Ignored* (TypeSystemExtension /
                       TypeSystemDefinition /
                       ExecutableDefinition)
TypeSystemExtension = SchemaExtension |
                      TypeExtension
SchemaExtension = (ExtendKeyword Ignored* SchemaKeyword Directives? Ignored* BraceOpen OperationTypeDefinition+ Ignored* BraceClose) |
                  (ExtendKeyword Ignored* SchemaKeyword Directives)
ExtendKeyword = 'extend'
SchemaKeyword = 'schema'
OperationTypeDefinition = Ignored* OperationType Ignored* Colon Ignored* NamedType
TypeExtension = ScalarTypeExtension |
                ObjectTypeExtension |
                InterfaceTypeExtension |
                UnionTypeExtension |
                EnumTypeExtension |
                InputObjectTypeExtension
ScalarTypeExtension = ExtendKeyword Ignored* ScalarKeyword Ignored* Name Directives
ObjectTypeExtension = (ExtendKeyword Ignored* TypeKeyword Ignored* Name ImplementsInterfaces? Directives? FieldsDefinition) |
                      (ExtendKeyword Ignored* TypeKeyword Ignored* Name ImplementsInterfaces? Directives) |
                      (ExtendKeyword Ignored* TypeKeyword Ignored* Name ImplementsInterfaces)
TypeKeyword = 'type'
InterfaceTypeExtension = (ExtendKeyword Ignored* InterfaceKeyword Ignored* Name Directives? FieldsDefinition) |
                         (ExtendKeyword Ignored* InterfaceKeyword Ignored* Name Directives)
UnionTypeExtension = (<'extend'> Ignored* <'union'> Ignored* Name Directives? UnionMemberTypes) |
                     (<'extend'> Ignored* <'union'> Ignored* Name Directives)
EnumTypeExtension = (<'extend'> Ignored* <'enum'> Ignored* Name Directives? EnumValuesDefinition) |
                    (<'extend'> Ignored* <'enum'> Ignored* Name Directives)
InputObjectTypeExtension = (<'extend'> Ignored* <'input'> Ignored* Name Directives? InputFieldsDefinition) |
                           (<'extend'> Ignored* <'input'> Ignored* Name Directives)
ExecutableDefinition = OperationDefinition |
                       FragmentDefinition
TypeSystemDefinition = SchemaDefinition |
                       TypeDefinition |
                       DirectiveDefinition
SchemaDefinition = <'schema'> Directives? Ignored* BraceOpen RootOperationTypeDefinition+ Ignored* BraceClose
RootOperationTypeDefinition = Ignored* OperationType Ignored* Colon Ignored* NamedType
TypeDefinition = ScalarTypeDefinition |
                 ObjectTypeDefinition |
                 InterfaceTypeDefinition |
                 UnionTypeDefinition |
                 EnumTypeDefinition |
                 InputObjectTypeDefinition
ScalarTypeDefinition = Description? Ignored* ScalarKeyword Ignored+ Name Directives?
ScalarKeyword = 'scalar'
ObjectTypeDefinition = Description? Ignored* ObjectKeyword Ignored+ Name ImplementsInterfaces? Directives? FieldsDefinition?
ObjectKeyword = 'type'
InterfaceTypeDefinition = Description? Ignored* InterfaceKeyword Ignored+ Name Directives? FieldsDefinition?
InterfaceKeyword = 'interface'
UnionTypeDefinition = Description? Ignored* UnionKeyword Ignored+ Name Directives? UnionMemberTypes?
UnionKeyword = 'union'
EnumKeyword = 'enum'
EnumTypeDefinition = Description? Ignored* EnumKeyword Ignored+ Name Directives? EnumValuesDefinition?
InputKeyword = 'input'
InputObjectTypeDefinition = Description? Ignored* InputKeyword Ignored+ Name Directives? InputFieldsDefinition?
DirectiveDefinition = Description? Ignored* DirectiveKeyword Ignored* DirectivePrefix Ignored* Name Ignored* ArgumentsDefinition? Ignored* OnKeyword Ignored* DirectiveLocations
DirectiveKeyword = 'directive'
OnKeyword = 'on'
DirectivePrefix = '@'
ArgumentsDefinition = ParensOpen InputValueDefinition+ Ignored* ParensClose
DirectiveLocations = (PipeCharacter? Ignored* DirectiveLocation) |
                     (DirectiveLocations Ignored* PipeCharacter Ignored* DirectiveLocation)
DirectiveLocation = ExecutableDirectiveLocation |
                    TypeSystemDirectiveLocation
ExecutableDirectiveLocation = 'QUERY' |
                              'MUTATION' |
                              'SUBSCRIPTION' |
                              'FIELD' |
                              'FRAGMENT_DEFINITION' |
                              'FRAGMENT_SPREAD' |
                              'INLINE_FRAGMENT'
TypeSystemDirectiveLocation = 'SCHEMA' |
                              'SCALAR' |
                              'OBJECT' |
                              'FIELD_DEFINITION' |
                              'ARGUMENT_DEFINITION' |
                              'INTERFACE' |
                              'UNION' |
                              'ENUM' |
                              'ENUM_VALUE' |
                              'INPUT_OBJECT' |
                              'INPUT_FIELD_DEFINITION'
Description = StringValue
FieldsDefinition = Ignored* BraceOpen FieldDefinition+ Ignored* BraceClose
FieldDefinition = Ignored* Description? Ignored* Name Ignored* FieldNameSeparator Type Directives?
FieldNameSeparator = <':'>
ImplementsInterfaces = (Ignored* ImplementsKeyword Ignored* ImplementsTypeSeparator? Ignored* NamedType) |
                       (ImplementsInterfaces Ignored* ImplementsTypeSeparator Ignored* NamedType)
ImplementsKeyword = 'implements'
ImplementsTypeSeparator = '&'
UnionMemberTypes = (Ignored* UnionEqualitySeparator Ignored* UnionTypeSeparator? Ignored* NamedType) |
                   (UnionMemberTypes Ignored* UnionTypeSeparator Ignored* NamedType)
UnionEqualitySeparator = '='
UnionTypeSeparator = '|'
EnumValuesDefinition = Ignored* BraceOpen EnumValueDefinition+ Ignored* BraceClose
EnumValueDefinition = Ignored* Description? Ignored* EnumValue Directives?
InputFieldsDefinition = Ignored* BraceOpen InputValueDefinition+ Ignored* BraceClose
InputValueDefinition = Ignored* Description? Ignored* Name Ignored* Colon Type DefaultValue? Directives?
OperationDefinition = (OperationType Ignored* Name? VariableDefinitions? Directives? SelectionSet) |
                      SelectionSet
FragmentDefinition = <'fragment'> Ignored+ FragmentName Ignored+ TypeCondition Directives? SelectionSet
OperationType = 'query' | 'mutation' | 'subscription'
VariableDefinitions = Ignored* <'('> VariableDefinition+ Ignored* <')'>
VariableDefinition = Ignored* Variable Ignored* Colon Type DefaultValue?
SelectionSet = Ignored* <'{'> Ignored* Selection+ Ignored* <'}'>
Selection = Field |
            FragmentSpread |
            InlineFragment
Field = Ignored* Alias? Ignored* Name Arguments? Directives? SelectionSet?
Alias = Ignored* Name Ignored* <':'>
Arguments = Ignored* <'('> Argument+ Ignored* <')'>
Argument = Ignored* Name Ignored* <':'> Value Ignored* <Comma*>
Value = Ignored* (Variable |
                  IntValue |
                  FloatValue |
                  StringValue |
                  BooleanValue |
                  NullValue |
                  EnumValue |
                  ListValue |
                  ObjectValue)
Variable = <'$'> Ignored* Name
DefaultValue = Ignored* Equals Value
EnumValue = #"^(?!(true|false|null))[_A-Za-z][_0-9A-Za-z]*"
ListValue = (<'['> Ignored* <']'>) |
            (<'['> Value+ Ignored* <']'>)
ObjectValue = (<'{'> Ignored* <'}'>) |
              (<'{'> ObjectField+ Ignored* <'}'>)
ObjectField = Ignored* Name Ignored* <':'> Ignored* Value
Directives = Directive+
Directive = Ignored* <'@'> Ignored* Name Arguments?
FragmentSpread = Ignored* <'...'> Ignored* FragmentName Directives?
FragmentName = #"^(?!on)[_A-Za-z][_0-9A-Za-z]*"
InlineFragment = <'...'> TypeCondition? Directives? SelectionSet
TypeCondition = Ignored* <'on'> Ignored* NamedType
Type = Ignored* (NamedType |
                 ListType |
                 NonNullType)
NamedType = Name
ListType = Ignored* BracketOpen Type Ignored* BracketClose
NonNullType = NamedType Ignored* ExclamationMark |
              ListType Ignored* ExclamationMark
